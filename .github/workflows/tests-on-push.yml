---

name: Tests on Push


on:
  push:
    branches-ignore:
      - main


jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dsp-tools repo
        uses: actions/checkout@v3          
      - name: Install poetry, python, and dependencies
        uses: ./.github/actions/setup
      - name: build docs
        run: poetry run mkdocs build --strict
      - name: check external links in docs
        run: |
          npm install -g markdown-link-validator
          poetry exec check-links
      - name: markdownlint
        run: poetry exec markdownlint


  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dsp-tools repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install poetry, python, and dependencies
        uses: ./.github/actions/setup
      - name: Linting with ruff
        run: poetry exec ruff-check-github
      - name: Formatting with ruff
        run: poetry exec ruff-format
      - name: Linting with mypy
        run: poetry exec mypy
      - name: Linting with darglint
        run: poetry exec darglint


  unittests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dsp-tools repo
        uses: actions/checkout@v3
      - name: Install poetry, python, and dependencies
        uses: ./.github/actions/setup
      - name: unittests
        run: poetry exec unittests
  

  benchmarking:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dsp-tools repo
        uses: actions/checkout@v3
      - name: Install poetry, python, and dependencies
        uses: ./.github/actions/setup
      - name: benchmarking
        run: poetry run pytest -s test/benchmarking/


  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dsp-tools repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install poetry, python, and dependencies
        uses: ./.github/actions/setup
      - name: start stack
        run: poetry run dsp-tools start-stack --no-prune
      - name: e2e tests
        run: poetry exec e2e-tests
      - name: stop stack  # see if this command can run (it isn't tested anywhere else)
        run: poetry run dsp-tools stop-stack


  distribution:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dsp-tools repo
        uses: actions/checkout@v3
      - name: Install python & poetry, build & install wheel, install pytest
        uses: ./.github/actions/setup-from-wheel
      - name: distribution tests
        run: pytest test/distribution/


  fast-xmlupload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dsp-tools repo
        uses: actions/checkout@v3
      - name: Install poetry, python, and dependencies
        uses: ./.github/actions/setup
      - uses: FedericoCarboni/setup-ffmpeg@v2
      - id: search-cached-imagemagick
        # If a cache is found that matches "key", the cached files are restored to "path".
        # If no cache is found, this step is skipped, and when all jobs are done, the files in "path" are cached under "key".
        uses: actions/cache@v3
        with:
          path: ~/bin/magick        # AppImage containing all binaries + dependencies
          key: imagemagick          # don't check for a new version, because version checking is fairly complex
      - uses: mfinelli/setup-imagemagick@v2  # downloads the "magick" AppImage to ~/bin/magick
        if: ${{ steps.search-cached-imagemagick.outputs.cache-hit != 'true' }}
      - name: start stack
        run: poetry run dsp-tools start-stack --no-prune
      - name: run fast-xmlupload test
        run: poetry run pytest test/fast_xmlupload/
