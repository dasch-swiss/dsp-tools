# coding: utf-8

"""
    DSP-API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.1.17
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_response import UserResponse

class TestUserResponse(unittest.TestCase):
    """UserResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserResponse:
        """Test UserResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserResponse`
        """
        model = UserResponse()
        if include_optional:
            return UserResponse(
                user = openapi_client.models.user_dto.UserDto(
                    id = '', 
                    username = '', 
                    email = '', 
                    given_name = '', 
                    family_name = '', 
                    status = True, 
                    lang = '', 
                    groups = [
                        openapi_client.models.group.Group(
                            id = '', 
                            name = '', 
                            descriptions = [
                                openapi_client.models.string_literal_v2.StringLiteralV2(
                                    value = '', 
                                    language = '', )
                                ], 
                            project = openapi_client.models.project.Project(
                                id = openapi_client.models.project_iri.ProjectIri(
                                    value = '', ), 
                                shortname = openapi_client.models.shortname.Shortname(
                                    value = '', ), 
                                shortcode = openapi_client.models.shortcode.Shortcode(
                                    value = '', ), 
                                longname = openapi_client.models.longname.Longname(
                                    value = '', ), 
                                description = [
                                    openapi_client.models.string_literal_v2.StringLiteralV2(
                                        value = '', 
                                        language = '', )
                                    ], 
                                keywords = [
                                    ''
                                    ], 
                                logo = openapi_client.models.logo.Logo(
                                    value = '', ), 
                                ontologies = [
                                    ''
                                    ], 
                                status = null, 
                                selfjoin = null, ), 
                            status = True, 
                            selfjoin = True, )
                        ], 
                    projects = [
                        openapi_client.models.project.Project(
                            id = openapi_client.models.project_iri.ProjectIri(
                                value = '', ), 
                            shortname = openapi_client.models.shortname.Shortname(
                                value = '', ), 
                            shortcode = openapi_client.models.shortcode.Shortcode(
                                value = '', ), 
                            status = null, 
                            selfjoin = null, )
                        ], 
                    permissions = openapi_client.models.permissions_data_adm.PermissionsDataADM(
                        groups_per_project = {
                            'key' : [
                                ''
                                ]
                            }, 
                        administrative_permissions_per_project = {
                            'key' : [
                                openapi_client.models.permission_adm.PermissionADM(
                                    name = '', 
                                    additional_information = '', 
                                    permission_code = 56, )
                                ]
                            }, ), )
            )
        else:
            return UserResponse(
                user = openapi_client.models.user_dto.UserDto(
                    id = '', 
                    username = '', 
                    email = '', 
                    given_name = '', 
                    family_name = '', 
                    status = True, 
                    lang = '', 
                    groups = [
                        openapi_client.models.group.Group(
                            id = '', 
                            name = '', 
                            descriptions = [
                                openapi_client.models.string_literal_v2.StringLiteralV2(
                                    value = '', 
                                    language = '', )
                                ], 
                            project = openapi_client.models.project.Project(
                                id = openapi_client.models.project_iri.ProjectIri(
                                    value = '', ), 
                                shortname = openapi_client.models.shortname.Shortname(
                                    value = '', ), 
                                shortcode = openapi_client.models.shortcode.Shortcode(
                                    value = '', ), 
                                longname = openapi_client.models.longname.Longname(
                                    value = '', ), 
                                description = [
                                    openapi_client.models.string_literal_v2.StringLiteralV2(
                                        value = '', 
                                        language = '', )
                                    ], 
                                keywords = [
                                    ''
                                    ], 
                                logo = openapi_client.models.logo.Logo(
                                    value = '', ), 
                                ontologies = [
                                    ''
                                    ], 
                                status = null, 
                                selfjoin = null, ), 
                            status = True, 
                            selfjoin = True, )
                        ], 
                    projects = [
                        openapi_client.models.project.Project(
                            id = openapi_client.models.project_iri.ProjectIri(
                                value = '', ), 
                            shortname = openapi_client.models.shortname.Shortname(
                                value = '', ), 
                            shortcode = openapi_client.models.shortcode.Shortcode(
                                value = '', ), 
                            status = null, 
                            selfjoin = null, )
                        ], 
                    permissions = openapi_client.models.permissions_data_adm.PermissionsDataADM(
                        groups_per_project = {
                            'key' : [
                                ''
                                ]
                            }, 
                        administrative_permissions_per_project = {
                            'key' : [
                                openapi_client.models.permission_adm.PermissionADM(
                                    name = '', 
                                    additional_information = '', 
                                    permission_code = 56, )
                                ]
                            }, ), ),
        )
        """

    def testUserResponse(self):
        """Test UserResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
