<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="https://dasch.swiss/schema"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="https://dasch.swiss/schema"
           elementFormDefault="qualified">

    <!-- nonEmptyString
        Data of type xs:string are not modified by the XML processor, 
        so the xs:pattern is applied to the original string
    -->
    <xs:simpleType name="nonEmptyString">
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:pattern value=".*\S+.*"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- nonEmptyString_pretty_printed
        xs:token is derived from string, but before the xs:pattern is applied, 
        the XML processor removes line feeds, carriage returns, tabs, leading and trailing spaces, and multiple spaces.
    -->
    <xs:simpleType name="nonEmptyString_pretty_printed">
        <xs:restriction base="xs:token">
            <xs:minLength value="1"/>
            <xs:pattern value=".*\S+.*"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- data type for resrefs "ID|ID|..." -->
    <xs:simpleType name="resrefs_type">
        <xs:restriction base="xs:string">
            <xs:pattern value="([^|]+)(\|[^|]+)*"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- group type for allow..." -->
    <xs:simpleType name="group_types">
        <xs:restriction base="xs:string">
            <xs:pattern
                value="(UnknownUser|KnownUser|ProjectMember|Creator|ProjectAdmin|SystemAdmin|([\w\-]+)?:([\w\- ]+))"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- data type for knora date -->
    <xs:simpleType name="knoradate_type">
        <xs:restriction base="xs:string">
            <xs:pattern
                value="(GREGORIAN:|JULIAN:|ISLAMIC:)?(CE:|BCE:|AD:|BC:)?(\d{1,4})(-\d{1,2})?(-\d{1,2})?((:CE|:BCE|:AD|:BC)?(:\d{1,4})(-\d{1,2})?(-\d{1,2})?)?"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- data type for knora time -->
    <xs:simpleType name="knoratime_type">
        <xs:restriction base="xs:string">
            <xs:pattern
                value="\d{4}-[0-1]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d(\.\d{1,12})?(Z|[+-][0-1]\d:[0-5]\d)"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- data type for knora color -->
    <xs:simpleType name="knoracolor_type">
        <xs:restriction base="xs:string">
            <xs:pattern value="#([0-9a-fA-F]{3}){1,2}"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- data type for knora uri -->
    <xs:simpleType name="knorauri_type">
        <xs:restriction base="xs:string">
            <xs:pattern value="([a-z][a-z0-9+.\-]*):(//([\w_.\-~:\[\]]+)(:\d{0,6})?)(/[\w_.\-:~%()!@,;/=*&amp;]*)*(\?[\w_.\-:~%()!@,;/=*&amp;]+)*(#[\w_.\-:~%()!@,;/=*&amp;]*)?"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- encoding types -->
    <xs:simpleType name="encoding_types">
        <xs:restriction base="xs:string">
            <xs:enumeration value="utf8"/>
            <xs:enumeration value="xml"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- text value type -->
    <xs:complexType name="text_type" mixed="true">
        <xs:sequence>
            <xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="encoding" type="encoding_types" use="required"/>
        <xs:attribute name="resrefs" type="resrefs_type"/>
        <xs:attribute name="comment" type="xs:string"/>
        <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
    </xs:complexType>

    <!-- xml encoding value type -->
    <xs:complexType name="xml_encoding_text_type" mixed="true">
        <xs:sequence>
            <xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="encoding" fixed="xml" use="required"/>
        <xs:attribute name="resrefs" type="resrefs_type"/>
        <xs:attribute name="comment" type="xs:string"/>
        <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
    </xs:complexType>

    <!-- formatted text type -->
    <xs:complexType name="formatted_text_type" mixed="true">
        <xs:sequence>
            <xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="comment" type="xs:string"/>
        <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
    </xs:complexType>

    <!-- unformatted text type -->
    <xs:complexType name="unformatted_text_type">
        <xs:simpleContent>
            <xs:extension base="nonEmptyString">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- color value type -->
    <xs:complexType name="color_type">
        <xs:simpleContent>
            <xs:extension base="knoracolor_type">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- date value type -->
    <xs:complexType name="date_type">
        <xs:simpleContent>
            <xs:extension base="knoradate_type">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- float value type -->
    <xs:complexType name="float_type">
        <xs:simpleContent>
            <xs:extension base="xs:float">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- geometry value type -->
    <xs:complexType name="geometry_type">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- geoname value type -->
    <xs:complexType name="geoname_type">
        <xs:simpleContent>
            <xs:extension base="nonEmptyString">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- list value type -->
    <xs:complexType name="list_type">
        <xs:simpleContent>
            <xs:extension base="nonEmptyString">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- integer value type -->
    <xs:complexType name="integer_type">
        <xs:simpleContent>
            <xs:extension base="xs:integer">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- hasSegmentBounds value type -->
    <xs:complexType name="hasSegmentBounds_type">
        <xs:sequence />
        <xs:attribute name="comment" type="xs:string"/>
        <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
        <xs:attribute name="segment_start" type="xs:double" use="required"/>
        <xs:attribute name="segment_end" type="xs:double" use="required"/>
    </xs:complexType>

    <!-- period value type -->
    <xs:complexType name="period_type">
        <xs:simpleContent>
            <xs:extension base="nonEmptyString">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- resptr_type (link to other resource) value type -->
    <xs:complexType name="resptr_type">
        <xs:simpleContent>
            <xs:extension base="nonEmptyString">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- time value type -->
    <xs:complexType name="time_type">
        <xs:simpleContent>
            <xs:extension base="knoratime_type">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- decimal value type -->
    <xs:complexType name="decimal_type">
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- uri value type -->
    <xs:complexType name="uri_type">
        <xs:simpleContent>
            <xs:extension base="knorauri_type">
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- boolean value type-->
    <xs:complexType name="boolean_type">
    <xs:simpleContent>
        <xs:extension base="xs:boolean">
            <xs:attribute name="comment" type="xs:string"/>
            <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
        </xs:extension>
    </xs:simpleContent>
    </xs:complexType>

    <!-- textprop_type -->
    <xs:complexType name="textprop_type">
        <xs:sequence>
            <xs:element name="text" type="text_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- colorprop_type -->
    <xs:complexType name="colorprop_type">
        <xs:sequence>
            <xs:element name="color" type="color_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- dateprop_type -->
    <xs:complexType name="dateprop_type">
        <xs:sequence>
            <xs:element name="date" type="date_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- floatprop_type -->
    <xs:complexType name="floatprop_type">
        <xs:sequence>
            <xs:element name="float" type="float_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- geonameprop_type -->
    <xs:complexType name="geonameprop_type">
        <xs:sequence>
            <xs:element name="geoname" type="geoname_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- listprop_type -->
    <xs:complexType name="listprop_type">
        <xs:sequence>
            <xs:element name="list" type="list_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="list" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- integerprop_type -->
    <xs:complexType name="integerprop_type">
        <xs:sequence>
            <xs:element name="integer" type="integer_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- periodprop_type -->
    <xs:complexType name="periodprop_type">
        <xs:sequence>
            <xs:element name="period" type="period_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- resptrprop_type -->
    <xs:complexType name="resptrprop_type">
        <xs:sequence>
            <xs:element name="resptr" type="resptr_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- timeprop_type -->
    <xs:complexType name="timeprop_type">
        <xs:sequence>
            <xs:element name="time" type="time_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- decimalprop_type -->
    <xs:complexType name="decimalprop_type">
        <xs:sequence>
            <xs:element name="decimal" type="decimal_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- uriprop_type -->
    <xs:complexType name="uriprop_type">
        <xs:sequence>
            <xs:element name="uri" type="uri_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- booleanprop_type -->
    <xs:complexType name="booleanprop_type">
        <xs:sequence>
            <xs:element name="boolean" type="boolean_type" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- builtin_hasComment_prop_type -->
    <xs:complexType name="builtin_hasComment_prop_type">
        <xs:sequence>
            <xs:element name="text" type="xml_encoding_text_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required" fixed="hasComment"/>
    </xs:complexType>

    <!-- builtin_hasGeometry_prop_type -->
    <xs:complexType name="builtin_hasGeometry_prop_type">
        <xs:sequence>
            <xs:element name="geometry" type="geometry_type" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required" fixed="hasGeometry"/>
    </xs:complexType>

    <!-- builtin_isAnnotationOf_prop_type -->
    <xs:complexType name="builtin_isAnnotationOf_prop_type">
        <xs:sequence>
            <xs:element name="resptr" type="resptr_type" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required" fixed="isAnnotationOf"/>
    </xs:complexType>

    <!-- builtin_isRegionOf_prop_type -->
    <xs:complexType name="builtin_isRegionOf_prop_type">
        <xs:sequence>
            <xs:element name="resptr" type="resptr_type" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required" fixed="isRegionOf"/>
    </xs:complexType>

    <!-- builtin_hasLinkTo_prop_type -->
    <xs:complexType name="builtin_hasLinkTo_prop_type">
        <xs:sequence>
            <xs:element name="resptr" type="resptr_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required" fixed="hasLinkTo"/>
    </xs:complexType>

    <!-- builtin_hasColor_prop_type -->
    <xs:complexType name="builtin_hasColor_prop_type">
        <xs:sequence>
            <xs:element name="color" type="color_type" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required" fixed="hasColor"/>
    </xs:complexType>

    <!-- bitstream tag -->
    <xs:complexType name="bitstream_type">
        <xs:simpleContent>
            <xs:extension base="nonEmptyString_pretty_printed">
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
                <xs:attribute name="license" type="xs:IDREF" use="optional"/>
                <xs:attribute name="copyright-attribution" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- iiif-uri tag -->
    <xs:complexType name="iiif_uri_type">
        <xs:simpleContent>
            <xs:extension base="nonEmptyString_pretty_printed">
                <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
                <xs:attribute name="license" type="xs:IDREF" use="optional"/>
                <xs:attribute name="copyright-attribution" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- resource tag -->
    <xs:complexType name="resource_type">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element name="bitstream" type="bitstream_type"/>
                <xs:element name="iiif-uri" type="iiif_uri_type"/>
            </xs:choice>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="text-prop" type="textprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="color-prop" type="colorprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="date-prop" type="dateprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="geoname-prop" type="geonameprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="list-prop" type="listprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="integer-prop" type="integerprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="period-prop" type="periodprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="resptr-prop" type="resptrprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="time-prop" type="timeprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="decimal-prop" type="decimalprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="uri-prop" type="uriprop_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="boolean-prop" type="booleanprop_type" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="label" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:minLength value="1"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="restype" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
        <xs:attribute name="iri" type="xs:string" use="optional"/>
        <xs:attribute name="ark" type="xs:string" use="optional"/>
        <xs:attribute name="creation_date" type="xs:dateTime" use="optional"/>
    </xs:complexType>

    <!-- annotation tag -->
    <xs:complexType name="annotation_type">
        <xs:all>
            <xs:element name="text-prop" type="builtin_hasComment_prop_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="resptr-prop" type="builtin_isAnnotationOf_prop_type" minOccurs="1" maxOccurs="1"/>
        </xs:all>
        <xs:attribute name="label" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
        <xs:attribute name="iri" type="xs:string" use="optional"/>
        <xs:attribute name="ark" type="xs:string" use="optional"/>
        <xs:attribute name="creation_date" type="xs:dateTime" use="optional"/>
    </xs:complexType>

    <!-- region tag -->
    <xs:complexType name="region_type">
        <xs:all>
            <xs:element name="text-prop" type="builtin_hasComment_prop_type" minOccurs="0"/>
            <xs:element name="resptr-prop" type="builtin_isRegionOf_prop_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="geometry-prop" type="builtin_hasGeometry_prop_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="color-prop" type="builtin_hasColor_prop_type" minOccurs="1" maxOccurs="1"/>
        </xs:all>
        <xs:attribute name="label" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
        <xs:attribute name="iri" type="xs:string" use="optional"/>
        <xs:attribute name="ark" type="xs:string" use="optional"/>
        <xs:attribute name="creation_date" type="xs:dateTime" use="optional"/>
    </xs:complexType>

    <!-- link tag -->
    <xs:complexType name="link_type">
        <xs:all>
            <xs:element name="text-prop" type="builtin_hasComment_prop_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="resptr-prop" type="builtin_hasLinkTo_prop_type" minOccurs="1" maxOccurs="1"/>
        </xs:all>
        <xs:attribute name="label" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
        <xs:attribute name="iri" type="xs:string" use="optional"/>
        <xs:attribute name="ark" type="xs:string" use="optional"/>
        <xs:attribute name="creation_date" type="xs:dateTime" use="optional"/>
    </xs:complexType>

    <!-- video-segment tag -->
    <xs:complexType name="video_segment_type">
        <xs:sequence>
            <xs:element name="isSegmentOf" type="resptr_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="hasSegmentBounds" type="hasSegmentBounds_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="hasTitle" type="unformatted_text_type" minOccurs="0" maxOccurs="1"/>
            <xs:element name="hasComment" type="formatted_text_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="hasDescription" type="formatted_text_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="hasKeyword" type="unformatted_text_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="relatesTo" type="resptr_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="label" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
        <xs:attribute name="creation_date" type="xs:dateTime" use="optional"/>
    </xs:complexType>

    <!-- audio-segment tag -->
    <xs:complexType name="audio_segment_type">
        <xs:sequence>
            <xs:element name="isSegmentOf" type="resptr_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="hasSegmentBounds" type="hasSegmentBounds_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="hasTitle" type="unformatted_text_type" minOccurs="0" maxOccurs="1"/>
            <xs:element name="hasComment" type="formatted_text_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="hasDescription" type="formatted_text_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="hasKeyword" type="unformatted_text_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="relatesTo" type="resptr_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="label" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="permissions" type="xs:IDREF" use="optional"/>
        <xs:attribute name="creation_date" type="xs:dateTime" use="optional"/>
    </xs:complexType>

    <!-- data type for knora shortcode -->
    <xs:simpleType name="knorashortcode_type">
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9a-fA-F]{4}"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- data type for valid permissions_type" -->
    <xs:simpleType name="valid_permissions_type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="RV"/>
            <xs:enumeration value="V"/>
            <xs:enumeration value="M"/>
            <xs:enumeration value="D"/>
            <xs:enumeration value="CR"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- allow_type -->
    <xs:complexType name="allow_type">
        <xs:simpleContent>
            <xs:extension base="valid_permissions_type">
                <xs:attribute name="group" type="group_types" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- permissions tag -->
    <xs:complexType name="permissions_type" mixed="true">
        <xs:sequence>
            <xs:element name="allow" type="allow_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required"/>
    </xs:complexType>

    <!-- copyright-attribution tag -->
    <xs:complexType name="copyright_attribution_type">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="id" type="xs:ID" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- copyright-attributions tag -->
    <xs:complexType name="copyright_attributions_type">
        <xs:sequence>
            <xs:element name="copyright-attribution" type="copyright_attribution_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- license tag -->
    <xs:complexType name="license_type">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="id" type="xs:ID" use="required"/>
                <xs:attribute name="uri" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- licenses tag -->
    <xs:complexType name="licenses_type">
        <xs:sequence>
            <xs:element name="license" type="license_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- complete document -->
    <xs:element name="knora">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="permissions" type="permissions_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="copyright-attributions" type="copyright_attributions_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="licenses" type="licenses_type" minOccurs="0" maxOccurs="unbounded"/>
                <xs:choice maxOccurs="unbounded">
                    <xs:element name="resource" type="resource_type" minOccurs="1" maxOccurs="unbounded">
                        <xs:unique name="UniqueNameAttr_Resource">
                            <xs:selector xpath=".//*"/>
                            <xs:field xpath="@name"/>
                        </xs:unique>
                    </xs:element>
                    <xs:element name="annotation" type="annotation_type" minOccurs="0" maxOccurs="unbounded">
                        <xs:unique name="UniqueNameAttr_Annotation">
                            <xs:selector xpath=".//*"/>
                            <xs:field xpath="@name"/>
                        </xs:unique>
                    </xs:element>
                    <xs:element name="region" type="region_type" minOccurs="0" maxOccurs="unbounded">
                        <xs:unique name="UniqueNameAttr_Region">
                            <xs:selector xpath=".//*"/>
                            <xs:field xpath="@name"/>
                        </xs:unique>
                    </xs:element>
                    <xs:element name="link" type="link_type" minOccurs="0" maxOccurs="unbounded">
                        <xs:unique name="UniqueNameAttr_Link">
                            <xs:selector xpath=".//*"/>
                            <xs:field xpath="@name"/>
                        </xs:unique>
                    </xs:element>
                    <xs:element name="video-segment" type="video_segment_type" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="audio-segment" type="audio_segment_type" minOccurs="0" maxOccurs="unbounded"/>
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="default-ontology" type="xs:string"/>
            <xs:attribute name="shortcode" type="knorashortcode_type"/>
        </xs:complexType>
        <xs:key name="permissionsId">
            <xs:selector xpath="./permissions"/>
            <xs:field xpath="@id"/>
        </xs:key>
        <xs:keyref name="permissionsIdref" refer="permissionsId">
            <xs:selector xpath="resource"/>
            <xs:field xpath="@permissions"/>
        </xs:keyref>
        <xs:unique name="IRI_attribute_of_resource_must_be_unique">
            <xs:selector xpath=".//*"/>
            <xs:field xpath="@iri"/>
        </xs:unique>
        <xs:unique name="ARK_attribute_of_resource_must_be_unique">
            <xs:selector xpath=".//*"/>
            <xs:field xpath="@ark"/>
        </xs:unique>
        <!-- Define a key constraint for license IDs -->
        <xs:key name="licenseIdKey">
            <xs:selector xpath="knora/licenses/license"/>
            <xs:field xpath="@id"/>
        </xs:key>
        <xs:keyref name="licenseIdRef" refer="licenseIdKey">
            <xs:selector xpath="knora/resource/*"/>
            <xs:field xpath="@license"/>
        </xs:keyref>
        <!-- Define a key constraint for copyright IDs -->
        <xs:key name="copyright-attributionsIdKey">
            <xs:selector xpath="knora/copyright-attributions/copyright-attribution"/>
            <xs:field xpath="@id"/>
        </xs:key>
        <xs:keyref name="copyrightIdRef" refer="copyright-attributionsIdKey">
            <xs:selector xpath="knora/resource/*"/>
            <xs:field xpath="@copyright-attribution"/>
        </xs:keyref>
    </xs:element>
</xs:schema>
