@prefix sh:         <http://www.w3.org/ns/shacl#> .
@prefix dash:       <http://datashapes.org/dash#> .
@prefix rdf:        <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:       <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:        <http://www.w3.org/2001/XMLSchema#> .
@prefix owl:        <http://www.w3.org/2002/07/owl#> .
@prefix knora-api:  <http://api.knora.org/ontology/knora-api/v2#> .

@prefix api-shapes: <http://api.knora.org/ontology/knora-api/shapes/v2#> .

#########################################
# GENERAL SHAPES
#########################################

# Cardinalities for the Resources are validated through designated shapes for the cardinality violations.
# Adding cardinalities to properties here would lead to duplication of the error message,
# therefore only the content is validated with the shapes for the resources.

########################
# UNIQUE VALUE SHAPE
########################

api-shapes:UniqueValue_Shape
  a              sh:NodeShape ;
  sh:targetClass knora-api:Resource ;
  sh:sparql      [
                   a          sh:SPARQLConstraint ;
                   sh:select  """
        PREFIX rdfs:       <http://www.w3.org/2000/01/rdf-schema#>
        PREFIX knora-api:  <http://api.knora.org/ontology/knora-api/v2#>
        PREFIX api-shapes: <http://api.knora.org/ontology/knora-api/shapes/v2#>

            SELECT $this ?path ?value WHERE {

                $this ?path ?valueClass .

                {
                    ?prop rdfs:subPropertyOf knora-api:valueHas .
                    ?valueClass ?prop ?value .
                }
                UNION
                {
                    ?valueClass knora-api:valueAsString|api-shapes:linkValueHasTargetID|api-shapes:listNodeAsString ?value .
                }
            }
            GROUP BY $this ?path ?value
            HAVING (COUNT(?value) > 1)
                    """ ;
                   sh:severity sh:Violation ;
                   sh:message  "A resource may not have the same property and value more than one time." ;
                 ] .


########################
# GENERIC RESOURCE SHAPE
########################

api-shapes:Resource_Shape
  a              sh:NodeShape ;
  sh:targetClass knora-api:Resource ;
  sh:name        "Validates generic properties of all Resources" ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     rdfs:label ;
                    sh:datatype xsd:string ;
                    sh:pattern  "\\s*\\S+\\s*" ;
                    sh:severity sh:Violation ;
                    sh:message  "The label must be a non-empty string" ;
                  ] ,
                  [
                    # Currently StandOff are attached directly to the resource and not in a LinkValue,
                    # therefore we do not validate it like a normal link with a LinkValue
                    a           sh:PropertyShape ;
                    sh:path     knora-api:hasStandoffLinkTo ;
                    sh:class    knora-api:Resource ;
                    sh:severity sh:Violation ;
                    sh:message  "A stand-off link must target an existing resource." ;
                  ] .


########################
# USER FACING VALUES
########################

# Cardinalities for Values are not evaluated separately and they can be included in this file.
# This however, will only work as long as the shapes for the knora-api:Value are not closed.

api-shapes:Value_ClassShape
  a              sh:NodeShape ;
  sh:targetClass knora-api:Value ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:valueHasComment ;
                    sh:datatype xsd:string ;
                    sh:pattern  "\\s*\\S+\\s*" ;
                    sh:minCount 0 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "The comment on the value must be a non-empty string" ;
                 ] .


api-shapes:BooleanValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:targetClass knora-api:BooleanValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:booleanValueAsBoolean ;
                    sh:datatype xsd:boolean ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "A BooleanValue requires exactly one valid boolean" ;
                 ] .

api-shapes:ColorValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:targetClass knora-api:ColorValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:colorValueAsColor ;
                    sh:datatype xsd:string ;
                    sh:pattern  "^#([0-9a-fA-F]{3}){1,2}$" ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "A ColorValue requires exactly one valid color" ;
                 ] .

api-shapes:DateValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:targetClass knora-api:DateValue ;
  sh:property    [
                    # Currently it is only checked that the string value is not empty
                    # To validate the DateValue as the API receives it, the Date should be taken apart
                    a           sh:PropertyShape ;
                    sh:path     knora-api:valueAsString ;
                    sh:datatype xsd:string ;
                    sh:pattern  "\\s*\\S+\\s*" ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "A DateValue requires a valid Date" ;
                 ] .

api-shapes:DecimalValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:targetClass knora-api:DecimalValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:decimalValueAsDecimal ;
                    sh:datatype xsd:decimal ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "A DecimalValue requires exactly one valid decimal"
                 ] .

api-shapes:GeonameValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:targetClass knora-api:GeonameValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:geonameValueAsGeonameCode ;
                    sh:datatype xsd:string ;
                    sh:pattern  "^\\d+$" ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "The value must be a valid geoname code" ;
                 ] .

api-shapes:GeomValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:targetClass knora-api:GeomValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:geometryValueAsGeometry ;
                    sh:datatype xsd:string ;
                    sh:pattern  "\\s*\\S+\\s*" ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "The value must be a valid geometry JSON object" ;
                 ] .

api-shapes:IntervalValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:targetClass knora-api:IntervalValue ;
  sh:property    [
                    a               sh:PropertyShape ;
                    sh:path         knora-api:intervalValueHasStart ;
                    sh:datatype     xsd:decimal ;
                    sh:minInclusive 0 ;
                    sh:minCount     1 ;
                    sh:maxCount     1 ;
                    sh:severity     sh:Violation ;
                    sh:message      "The interval start must be a non-negative integer or decimal." ;
                 ] ,
                 [
                    a               sh:PropertyShape ;
                    sh:path         knora-api:intervalValueHasEnd ;
                    sh:datatype     xsd:decimal ;
                    sh:minExclusive 0 ;
                    sh:minCount     1 ;
                    sh:maxCount     1 ;
                    sh:severity     sh:Violation ;
                    sh:message      "The interval end must be an integer or decimal that is larger than 0." ;
                 ] ,

                 [
                     sh:path knora-api:intervalValueHasStart ;
                     sh:lessThan knora-api:intervalValueHasEnd ;
                     sh:severity sh:Violation ;
                     sh:message "The start of the interval must be smaller than the end." ;
                 ] .

api-shapes:IntValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:targetClass knora-api:IntValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:intValueAsInt ;
                    sh:datatype xsd:integer ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "An IntValue requires exactly one valid integer" ;
                 ] .

##############
# LinkValue
# The target of the LinkValue is ontology specific.
# The Shape is constructed through the SPARQL queries

##############
# ListValue
# The target of the ListValue is ontology specific.
# The Shape is constructed through the SPARQL queries


api-shapes:SimpleTextValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Ensures that the properties for a simple text value are used" ;
  sh:property [
                  # Because it is not a separate class we have to check the cardinality of the property
                  a           sh:PropertyShape ;
                  sh:path     knora-api:valueAsString ;
                  sh:datatype xsd:string ;
                  sh:minCount 1 ;
                  sh:maxCount 1 ;
                  sh:severity sh:Violation ;
                  sh:message  "TextValue without formatting"
              ] ,
              [
                  a           sh:PropertyShape ;
                  sh:path     knora-api:valueAsString ;
                  sh:datatype xsd:string ;
                  sh:pattern  "\\s*\\S+\\s*" ;
                  sh:severity sh:Violation ;
                  sh:message  "The value must be a non-empty string"
              ] .

api-shapes:FormattedTextValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Ensures that the properties for a formatted text value are used" ;
  sh:property [
                  # Because it is not a separate class we have to check the cardinality of the property
                  a           sh:PropertyShape ;
                  sh:path     knora-api:textValueAsXml ;
                  sh:datatype xsd:string ;
                  sh:minCount 1 ;
                  sh:maxCount 1 ;
                  sh:severity sh:Violation ;
                  sh:message  "TextValue with formatting" ;
              ] ,
              [
                  a           sh:PropertyShape ;
                  sh:path     knora-api:textValueAsXml ;
                  sh:datatype xsd:string ;
                  sh:pattern  "\\s*\\S+\\s*" ;
                  sh:severity sh:Violation ;
                  sh:message  "The value must be a non-empty string" ;
              ] .

api-shapes:TimeValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:targetClass knora-api:TimeValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:timeValueAsTimeStamp ;
                    sh:datatype xsd:dateTimeStamp ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "A TimeValue requires exactly one valid xsd:dateTimeStamp"
                 ] .

api-shapes:UriValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:targetClass knora-api:UriValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:uriValueAsUri ;
                    sh:datatype xsd:anyURI ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "A UriValue requires exactly one valid xsd:anyURI" ;
                 ] .


#########################################
# FILEVALUE
#########################################

api-shapes:FileValue_ClassShape
  a              sh:NodeShape ;
  sh:targetClass knora-api:FileValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:hasPermissions ;
                    sh:minCount 0 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "A FileValue may have at most one permission." ;
                  ] ,
                  [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:hasLicense ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "Files and IIIF-URIs require a reference to a license." ;
                  ] ,
                  [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:hasAuthorship ;
                    sh:datatype xsd:string ;
                    sh:minCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "Files and IIIF-URIs require at least one authorship." ;
                  ] ,
                  [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:hasCopyrightHolder ;
                    sh:datatype xsd:string ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "Files and IIIF-URIs require a copyright holder." ;
                  ] .


api-shapes:ArchiveFileValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the class type" ;
  sh:targetClass knora-api:ArchiveFileValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:fileValueHasFilename ;
                    sh:datatype xsd:string ;
                    sh:pattern  ".+\\.(zip|tar|gz|z|tgz|gzip|7z)$" ;
                    sh:flags    "i" ; # case insensitive
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  """
                                An ArchiveRepresentation requires a file with one of the following extensions
                                'zip', 'tar', 'gz', 'z', 'tgz', 'gzip', '7z'.
                                """ ;
                  ] .

api-shapes:AudioFileValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the class type" ;
  sh:targetClass knora-api:AudioFileValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:fileValueHasFilename ;
                    sh:datatype xsd:string ;
                    sh:pattern  ".+\\.(mp3|wav)$" ;
                    sh:flags    "i" ; # case insensitive
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "An AudioRepresentation requires a file with one of the following extensions 'mp3', 'wav'." ;
                  ] .

api-shapes:DocumentFileValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the class type" ;
  sh:targetClass knora-api:DocumentFileValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:fileValueHasFilename ;
                    sh:datatype xsd:string ;
                    sh:pattern  ".+\\.(pdf|doc|docx|xls|xlsx|ppt|pptx)$" ;
                    sh:flags    "i" ; # case insensitive
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  """
                                A DocumentRepresentation requires a file with one of the following extensions
                                'pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx'.
                                """ ;
                  ] .

api-shapes:MovingImageFileValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the class type" ;
  sh:targetClass knora-api:MovingImageFileValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:fileValueHasFilename ;
                    sh:datatype xsd:string ;
                    sh:pattern  ".+\\.mp4$" ;
                    sh:flags    "i" ; # case insensitive
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "A MovingImageRepresentation requires a file with the extension 'mp4'." ;
                  ] .

api-shapes:StillImageFileValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the class type" ;
  sh:targetClass knora-api:StillImageFileValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:fileValueHasFilename ;
                    sh:datatype xsd:string ;
                    sh:pattern  ".+\\.(jpg|jpeg|png|tif|tiff|jp2|jpx)$" ; # jpx is the extension of the files returned by dsp-ingest
                    sh:flags    "i" ; # case insensitive
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  """
                                A StillImageFileValue requires a file with one of the extensions:
                                'jpg', 'jpeg', 'png', 'tif', 'tiff', 'jp2'.
                                """ ;
                  ] .

api-shapes:StillImageExternalFileValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the class type" ;
  sh:targetClass knora-api:StillImageExternalFileValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:stillImageFileValueHasExternalUrl ;
                    sh:datatype xsd:anyURI ;
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  "StillImageExternalFileValue requires an external IIIF-URI" ;
                  ] .

api-shapes:TextFileValue_ClassShape
  a              sh:NodeShape ;
  sh:name        "Validates the class type" ;
  sh:targetClass knora-api:TextFileValue ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:fileValueHasFilename ;
                    sh:datatype xsd:string ;
                    sh:pattern  ".+\\.(odd|rng|txt|xml|xsd|xsl|csv|json)$" ;
                    sh:flags    "i" ; # case insensitive
                    sh:minCount 1 ;
                    sh:maxCount 1 ;
                    sh:severity sh:Violation ;
                    sh:message  """
                                A TextRepresentation requires a file with one of the following extensions
                                'odd', 'rng', 'txt', 'xml', 'xsd', 'xsl', 'csv', 'json'.
                                """ ;
                  ] .


#########################################
# KNORA-API IN-BUILT PROPERTIES
#########################################

# The following shapes are for properties that are used by several resources.
# Property shapes only used with one specific resource are defined with the shape for the resource.

api-shapes:hasComment_PropertyShape
  a       sh:PropertyShape ;
  sh:path knora-api:hasComment ;
  sh:node api-shapes:FormattedTextValue_ClassShape .

# dash:coExistsWith ensures that isPartOf also needs seqnum. There is no need for a second shape.
api-shapes:seqnum_PropShape
  a                 sh:PropertyShape ;
  sh:path           knora-api:seqnum ;
  dash:coExistsWith knora-api:isPartOf ;
  sh:severity       sh:Violation ;
  sh:message        """
                    The property seqnum and isPartOf (or sub-properties of them) must be used together.
                    This resource only used one of the properties.
                    """ .


#########################################
# DSP BUILT IN RESOURCES
#########################################

###########################
# LinkObj

api-shapes:LinkObj_ResourceShape
  a              sh:NodeShape ;
  sh:name        "Validates the LinkObj resource" ;
  sh:targetClass knora-api:LinkObj ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:hasLinkTo ;
                    sh:class    knora-api:LinkValue ;
                    sh:severity sh:Violation ;
                    sh:message  "This property requires a LinkValue"
                 ] ,
                 [
                    a       sh:PropertyShape ;
                    sh:path knora-api:hasLinkTo ;
                    sh:node api-shapes:hasLinkTo_NodeShape ;
                 ] ,
                 api-shapes:hasComment_PropertyShape .


api-shapes:hasLinkTo_NodeShape
  a           sh:NodeShape ;
  sh:name     "This ensures that the target of the property is of type Resource, i.e. exists in the graph." ;
  sh:property [
                a          sh:PropertyShape ;
                sh:path    api-shapes:linkValueHasTargetID ;
                sh:class   knora-api:Resource ;
                sh:severity sh:Violation ;
                sh:message "Range is knora-api:Resource or a subclass." ;
              ] .


###########################
# Region

api-shapes:Region_ResourceShape
  a              sh:NodeShape ;
  sh:name        "Validates the Region resource" ;
  sh:targetClass knora-api:Region ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:isRegionOf ;
                    sh:class    knora-api:LinkValue ;
                    sh:severity sh:Violation ;
                    sh:message  "This property requires a LinkValue"
                 ] ,
                 [
                    a       sh:PropertyShape ;
                    sh:path knora-api:isRegionOf ;
                    sh:node api-shapes:isRegionOf_NodeShape ;
                 ] ,
                 [
                    a          sh:PropertyShape ;
                    sh:path    knora-api:hasColor ;
                    sh:class   knora-api:ColorValue ;
                    sh:message "This property requires a ColorValue" ;
                 ] ,
                 [
                    a          sh:PropertyShape ;
                    sh:path    knora-api:hasGeometry ;
                    sh:class   knora-api:GeomValue ;
                    sh:message "This property requires a GeomValue" ;
                 ] ,
                 api-shapes:hasComment_PropertyShape .

api-shapes:isRegionOf_NodeShape
  a           sh:NodeShape ;
  sh:name     "This ensures that the target of the property is of type Representation and exists in the graph." ;
  sh:property [
                a           sh:PropertyShape ;
                sh:path     api-shapes:linkValueHasTargetID ;
                sh:class    knora-api:Representation ;
                sh:severity sh:Violation ;
                sh:message  "http://api.knora.org/ontology/knora-api/v2#Representation" ;
              ] .


###########################
# Segment

# These shapes validate the generic properties of the Audio and Video Segment
# and need not be repeated for each segment type.

api-shapes:Segment_ResourceShape
  a              sh:NodeShape ;
  sh:name        "Validates the Region resource" ;
  sh:targetClass knora-api:Segment ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:hasSegmentBounds ;
                    sh:class    knora-api:IntervalValue ;
                    sh:severity sh:Violation ;
                    sh:message  "This property requires an IntervalValue" ;
                 ] ,
                 [
                    a       sh:PropertyShape ;
                    sh:path knora-api:hasDescription ;
                    sh:node api-shapes:FormattedTextValue_ClassShape
                 ] ,
                 [
                    a       sh:PropertyShape ;
                    sh:path knora-api:hasTitle ;
                    sh:node api-shapes:SimpleTextValue_ClassShape ;
                 ] ,
                 [
                    a       sh:PropertyShape ;
                    sh:path knora-api:hasKeyword ;
                    sh:node api-shapes:SimpleTextValue_ClassShape ;
                 ] ,
                 [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:relatesTo ;
                    sh:class    knora-api:LinkValue ;
                    sh:node     api-shapes:relatesTo_NodeShape ;
                    sh:severity sh:Violation ;
                    sh:message  "This property requires an LinkValue" ;
                 ] ,
                 [
                    a       sh:PropertyShape ;
                    sh:path knora-api:relatesTo ;
                    sh:node api-shapes:relatesTo_NodeShape ;
                 ] ,
                 api-shapes:hasComment_PropertyShape .

api-shapes:relatesTo_NodeShape
  a           sh:NodeShape ;
  sh:name     "This ensures that the target of the property is of type Resource, i.e. exists in the graph." ;
  sh:property [
                a           sh:PropertyShape ;
                sh:path     api-shapes:linkValueHasTargetID ;
                sh:class    knora-api:Resource ;
                sh:severity sh:Violation ;
                sh:message  "Range is knora-api:Resource or a subclass." ;
              ] .


###########################
# AudioSegment

api-shapes:AudioSegment_ResourceShape
  a              sh:NodeShape ;
  sh:name        "Validates the AudioSegment resource" ;
  sh:targetClass knora-api:AudioSegment ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:isAudioSegmentOf ;
                    sh:class    knora-api:LinkValue ;
                    sh:severity sh:Violation ;
                    sh:message  "This property requires a LinkValue" ;
                 ] ,
                 [
                    a       sh:PropertyShape ;
                    sh:path knora-api:isAudioSegmentOf ;
                    sh:node api-shapes:isAudioSegmentOf_NodeShape ;
                 ] .

api-shapes:isAudioSegmentOf_NodeShape
  a           sh:NodeShape ;
  sh:name     "This ensures that the target of the property is of type AudioRepresentation and exists in the graph." ;
  sh:property [
                a           sh:PropertyShape ;
                sh:path     api-shapes:linkValueHasTargetID ;
                sh:class    knora-api:AudioRepresentation ;
                sh:severity sh:Violation ;
                sh:message  "http://api.knora.org/ontology/knora-api/v2#AudioRepresentation" ;
              ] .


###########################
# VideoSegment

api-shapes:VideoSegment_ResourceShape
  a              sh:NodeShape ;
  sh:name        "Validates the VideoSegment resource" ;
  sh:targetClass knora-api:VideoSegment ;
  sh:property    [
                    a           sh:PropertyShape ;
                    sh:path     knora-api:isVideoSegmentOf ;
                    sh:class    knora-api:LinkValue ;
                    sh:severity sh:Violation ;
                    sh:message  "This property requires a LinkValue" ;
                 ] ,
                 [
                    a       sh:PropertyShape ;
                    sh:path knora-api:isVideoSegmentOf ;
                    sh:node api-shapes:isVideoSegmentOf_NodeShape ;
                 ] .

api-shapes:isVideoSegmentOf_NodeShape
  a           sh:NodeShape ;
  sh:name     "This ensures that the target of the property is of type MovingImageRepresentation and exists in the graph." ;
  sh:property [
                a           sh:PropertyShape ;
                sh:path     api-shapes:linkValueHasTargetID ;
                sh:class    knora-api:MovingImageRepresentation ;
                sh:severity sh:Violation ;
                sh:message  "http://api.knora.org/ontology/knora-api/v2#MovingImageRepresentation" ;
              ] .
