@prefix sh:         <http://www.w3.org/ns/shacl#> .
@prefix dash:       <http://datashapes.org/dash#> .
@prefix rdf:        <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:       <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:        <http://www.w3.org/2001/XMLSchema#> .
@prefix owl:        <http://www.w3.org/2002/07/owl#> .
@prefix knora-api:  <http://api.knora.org/ontology/knora-api/v2#> .

@prefix api-shapes: <http://api.knora.org/ontology/knora-api/shapes/v2#> .

#########################################
# GENERAL SHAPES
#########################################

########################
# UNIQUE VALUE SHAPE
########################

api-shapes:UniqueValue_Shape
  a              sh:NodeShape ;
  sh:targetClass knora-api:Resource ;
  sh:sparql      [
                   a          sh:SPARQLConstraint ;
                   sh:message "A resource may not have the same property and value more than one time." ;
                   sh:select  """
        PREFIX rdfs:       <http://www.w3.org/2000/01/rdf-schema#>
        PREFIX knora-api:  <http://api.knora.org/ontology/knora-api/v2#>
        PREFIX api-shapes: <http://api.knora.org/ontology/knora-api/shapes/v2#>

            SELECT $this ?path ?value WHERE {

                $this ?path ?valueClass .

                {
                    ?prop rdfs:subPropertyOf knora-api:valueHas .
                    ?valueClass ?prop ?value .
                }
                UNION
                {
                    ?valueClass knora-api:valueAsString|api-shapes:linkValueHasTargetID|api-shapes:listNodeAsString ?value .
                }
            }
            GROUP BY $this ?path ?value
            HAVING (COUNT(?value) > 1)
                    """ ;
                 ] ;
  sh:severity    sh:Violation .


########################
# RDFS:LABEL SHAPE
########################

api-shapes:rdfsLabel_Shape
  a                sh:PropertyShape ;
  # sh:targetClass knora-api:Resource ;
  sh:message       "The label must be a non-empty string" ;
  sh:path          rdfs:label ;
  sh:minCount      1 ;
  sh:maxCount      1 ;
  sh:pattern       "\\s*\\S+\\s*" ;
  sh:datatype      xsd:string ;
  sh:severity      sh:Violation .


########################
# USER FACING VALUES
########################

##############
# BooleanValue
api-shapes:BooleanValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:BooleanValue ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:message     "BooleanValue" ;
  sh:property    api-shapes:booleanValueAsBoolean_Shape ,
                 api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

api-shapes:booleanValueAsBoolean_Shape
  a           sh:PropertyShape ;
  sh:message  "A BooleanValue requires exactly one valid boolean" ;
  sh:path     knora-api:booleanValueAsBoolean ;
  sh:datatype xsd:boolean ;
  # sh:minCount 1 ;
  # sh:maxCount 1 ;
  sh:severity sh:Violation .

##############
# ColorValue
api-shapes:ColorValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:ColorValue ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:message     "ColorValue" ;
  sh:property    api-shapes:colorValueAsColor_Shape ,
                 api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

api-shapes:colorValueAsColor_Shape
  a           sh:PropertyShape ;
  sh:message  "A ColorValue requires exactly one valid color" ;
  sh:path     knora-api:colorValueAsColor ;
  sh:pattern  "^#([0-9a-fA-F]{3}){1,2}$" ;
  # sh:minCount 1 ;
  # sh:maxCount 1 ;
  sh:datatype xsd:string ;
  sh:severity sh:Violation .

##############
# DateValue
api-shapes:DateValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:DateValue ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:message     "DateValue" ;
  sh:property    api-shapes:valueAsString_DateValueShape ,
                 api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

# Currently it is only checked that the string value is not empty
# To validate the DateValue as the API receives it, the Date should be taken apart
api-shapes:valueAsString_DateValueShape
  a           sh:PropertyShape ;
  sh:message  "A DateValue requires a valid Date" ;
  sh:path     knora-api:valueAsString ;
  sh:pattern  "\\s*\\S+\\s*" ;
  sh:datatype xsd:string ;
  sh:severity sh:Violation .

##############
# DecimalValue
api-shapes:DecimalValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:DecimalValue ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:message     "DecimalValue" ;
  sh:property    api-shapes:decimalValueAsDecimal_Shape ,
                 api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

api-shapes:decimalValueAsDecimal_Shape
  a           sh:PropertyShape ;
  sh:message  "A DecimalValue requires exactly one valid decimal" ;
  sh:path     knora-api:decimalValueAsDecimal ;
  sh:datatype xsd:decimal ;
  # sh:minCount 1 ;
  # sh:maxCount 1 ;
  sh:severity sh:Violation .

##############
# GeonameValue
api-shapes:GeonameValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:GeonameValue ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:message     "GeonameValue" ;
  sh:property    api-shapes:geonameValueAsGeonameCode_Shape ,
                 api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

api-shapes:geonameValueAsGeonameCode_Shape
  a           sh:PropertyShape ;
  sh:message  "The value must be a valid geoname code" ;
  sh:path     knora-api:geonameValueAsGeonameCode ;
  sh:pattern  "^\\d+$" ;
  sh:datatype xsd:string ;
  sh:severity sh:Violation .

##############
# GeomValue
api-shapes:GeomValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:GeomValue ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:message     "GeomValue" ;
  sh:property    api-shapes:geometryValueAsGeometry_Shape ,
                 api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

api-shapes:geometryValueAsGeometry_Shape
  a           sh:PropertyShape ;
  sh:message  "The value must be a valid geometry JSON object" ;
  sh:path     knora-api:geometryValueAsGeometry ;
  sh:pattern  "\\s*\\S+\\s*" ;
  sh:datatype xsd:string ;
  sh:severity sh:Violation .

##############
# IntervalValue
api-shapes:IntervalValue_ClassShape
  a           sh:NodeShape ;
  # sh:targetClass knora-api:IntervalValue ;
  sh:name     "Validates the properties used with this targetClass" ;
  sh:message  "IntervalValue" ;
  sh:property [
                sh:path knora-api:intervalValueHasStart ;
		            sh:lessThan knora-api:intervalValueHasEnd ;
                sh:message "The start of the interval must be smaller than the end." ;
                sh:severity sh:Violation ;
              ] ,
              api-shapes:valueHasComment_Shape ,
              api-shapes:intervalValueHasStart_PropShape ,
              api-shapes:intervalValueHasEnd_PropShape ;
  sh:severity sh:Violation .

### knora-api:intervalValueHasStart
api-shapes:intervalValueHasStart_PropShape
  a               sh:PropertyShape ;
  sh:message      "The interval start must be a non-negative integer or decimal." ;
  sh:path         knora-api:intervalValueHasStart ;
  sh:datatype     xsd:decimal ;
  sh:minInclusive 0 ;
  sh:minCount     1 ;
  sh:maxCount     1 ;
  sh:severity     sh:Violation .

### knora-api:intervalValueHasEnd
api-shapes:intervalValueHasEnd_PropShape
  a               sh:PropertyShape ;
  sh:message      "The interval end must be an integer or decimal that is larger than 0." ;
  sh:path         knora-api:intervalValueHasEnd ;
  sh:datatype     xsd:decimal ;
  sh:minExclusive 0 ;
  sh:minCount     1 ;
  sh:maxCount     1 ;
  sh:severity     sh:Violation .

##############
# IntValue
api-shapes:IntValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:IntValue ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:message     "IntValue" ;
  sh:property    api-shapes:intValueAsInt_Shape ,
                 api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

api-shapes:intValueAsInt_Shape
  a           sh:PropertyShape ;
  sh:message  "An IntValue requires exactly one valid integer" ;
  sh:path     knora-api:intValueAsInt ;
  sh:datatype xsd:integer ;
  # sh:minCount 1 ;
  # sh:maxCount 1 ;
  sh:severity sh:Violation .

##############
# LinkValue

# The target of the LinkValue is ontology specific.
# The Shape is constructed through the SPARQL queries
api-shapes:LinkValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:LinkValue ;
  sh:name        "Validates the metadata properties used with this targetClass" ;
  sh:message     "LinkValue" ;
  sh:property    api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

##############
# ListValue

# The target of the ListValue is ontology specific.
# The Shape is constructed through the SPARQL queries
api-shapes:ListValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:ListValue ;
  sh:name        "Validates the metadata properties used with this targetClass" ;
  sh:message     "ListValue" ;
  sh:property    api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

##############
# TextValue

# This validates the metadata of the TextValue
# It cannot give information if it is the correct TextValue type
api-shapes:TextValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:TextValue ;
  sh:name        "Validates the metadata properties used with this targetClass" ;
  sh:message     "TextValue" ;
  sh:property    api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

###
# SimpleTextValue

# This validates that the Simple TextValue is correct
api-shapes:SimpleTextValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Ensures that the properties for a simple text value are used" ;
  sh:property api-shapes:SimpleTextValue_PropShape ,
              api-shapes:valueAsString_Shape ;
  sh:severity sh:Violation .

# Because it is not a separate class we have to check the cardinality of the property
api-shapes:SimpleTextValue_PropShape
  a           sh:PropertyShape ;
  sh:message  "TextValue without formatting" ;
  sh:path     knora-api:valueAsString ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
  sh:maxCount 1 .

api-shapes:valueAsString_Shape
  a           sh:PropertyShape ;
  sh:message  "The value must be a non-empty string" ;
  sh:path     knora-api:valueAsString ;
  sh:pattern  "\\s*\\S+\\s*" ;
  sh:datatype xsd:string ;
  sh:severity sh:Violation .

###
# FormattedTextValue

# This validates that the Rich TextValue is correct
api-shapes:FormattedTextValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Ensures that the properties for a formatted text value are used" ;
  sh:property api-shapes:FormattedTextValue_PropShape ,
              api-shapes:textValueAsXml_Shape ,
              api-shapes:valueHasComment_Shape ;
  sh:severity sh:Violation .

# Because it is not a separate class we have to check the cardinality of the property
api-shapes:FormattedTextValue_PropShape
  a           sh:PropertyShape ;
  sh:message  "TextValue with formatting" ;
  sh:path     knora-api:textValueAsXml ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
  sh:maxCount 1 .

api-shapes:textValueAsXml_Shape
  a           sh:PropertyShape ;
  sh:message  "The value must be a non-empty string" ;
  sh:path     knora-api:textValueAsXml ;
  sh:pattern  "\\s*\\S+\\s*" ;
  sh:datatype xsd:string ;
  sh:severity sh:Violation .

##############
# TimeValue
api-shapes:TimeValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:TimeValue ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:message     "TimeValue" ;
  sh:property    api-shapes:timeValueAsTimeStamp_Shape ,
                 api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

api-shapes:timeValueAsTimeStamp_Shape
  a           sh:PropertyShape ;
  sh:message  "A TimeValue requires exactly one valid xsd:dateTimeStamp" ;
  sh:path     knora-api:timeValueAsTimeStamp ;
  sh:datatype xsd:dateTimeStamp ;
  # sh:minCount 1 ;
  # sh:maxCount 1 ;
  sh:severity sh:Violation .

##############
# UriValue
api-shapes:UriValue_ClassShape
  a              sh:NodeShape ;
  # sh:targetClass knora-api:UriValue ;
  sh:name        "Validates the properties used with this targetClass" ;
  sh:message     "UriValue" ;
  sh:property    api-shapes:uriValueAsUri_Shape ,
                 api-shapes:valueHasComment_Shape ;
  sh:severity    sh:Violation .

api-shapes:uriValueAsUri_Shape
  a           sh:PropertyShape ;
  sh:message  "A UriValue requires exactly one valid xsd:anyURI" ;
  sh:path     knora-api:uriValueAsUri ;
  sh:datatype xsd:anyURI ;
  # sh:minCount 1 ;
  # sh:maxCount 1 ;
  sh:severity sh:Violation .

#########################################
# KNORA-API IN-BUILT PROPERTIES
#########################################

### knora-api:hasLinkTo

api-shapes:hasLinkTo_PropertyShape
  a           sh:PropertyShape ;
  sh:path     knora-api:hasLinkTo ;
  sh:node     api-shapes:LinkValue_ClassShape, api-shapes:hasLinkTo_NodeShape .

api-shapes:hasLinkTo_NodeShape
  a           sh:NodeShape ;
  sh:name     "This ensures that the target of the property is of type Resource, i.e. exists in the graph." ;
  sh:property [
                a          sh:PropertyShape ;
                sh:class   knora-api:Resource ;
                sh:message "Range is knora-api:Resource or a subclass." ;
                sh:path    api-shapes:linkValueHasTargetID ;
              ] ;
  sh:severity sh:Violation .


### knora-api:isRegionOf

api-shapes:isRegionOf_PropertyShape
  a       sh:PropertyShape ;
  sh:path knora-api:isRegionOf ;
  sh:node api-shapes:LinkValue_ClassShape, api-shapes:isRegionOf_NodeShape .

api-shapes:isRegionOf_NodeShape
  a           sh:NodeShape ;
  sh:name     "This ensures that the target of the property is of type Representation, i.e. exists in the graph." ;
  sh:property [
                a          sh:PropertyShape ;
                sh:class   knora-api:Representation ;
                sh:message "http://api.knora.org/ontology/knora-api/v2#Representation" ;
                sh:path    api-shapes:linkValueHasTargetID ;
              ] ;
  sh:severity sh:Violation .


### knora-api:hasComment

api-shapes:hasComment_PropertyShape
  a       sh:PropertyShape ;
  sh:node api-shapes:FormattedTextValue_ClassShape ;
  sh:path knora-api:hasComment .


### knora-api:valueHasComment

api-shapes:valueHasComment_Shape
  a           sh:PropertyShape ;
  sh:message  "The comment on the value must be a non-empty string" ;
  sh:path     knora-api:valueHasComment ;
  sh:minCount 0 ;
  sh:maxCount 1 ;
  sh:pattern  "\\s*\\S+\\s*" ;
  sh:datatype xsd:string ;
  sh:severity sh:Violation .


### knora-api:hasColor

api-shapes:hasColor_PropertyShape
  a        sh:PropertyShape ;
  sh:node  api-shapes:ColorValue_ClassShape ;
  sh:path  knora-api:hasColor .


### knora-api:hasGeometry

api-shapes:hasGeometry_PropertyShape
  a       sh:PropertyShape ;
  sh:node api-shapes:GeomValue_ClassShape ;
  sh:path knora-api:hasGeometry .


### knora-api:seqnum and knora-api:isPartOf

# dash:coExistsWith ensures that isPartOf also needs seqnum. There is no need for a second shape.
api-shapes:seqnum_PropShape
  a                 sh:PropertyShape ;
  sh:message        """
                    The property seqnum or isPartOf (or sub-properties of them) must be used together.
                    This resource only used one of the properties.
                    """ ;
  sh:path           knora-api:seqnum ;
  dash:coExistsWith knora-api:isPartOf ;
  sh:severity       sh:Violation .


### knora-api:hasSegmentBounds

api-shapes:hasSegmentBounds_PropertyShape
  a       sh:PropertyShape ;
  sh:node api-shapes:IntervalValue_ClassShape ;
  sh:path knora-api:hasSegmentBounds .


### knora-api:relatesTo

api-shapes:relatesTo_PropertyShape
  a       sh:PropertyShape ;
  sh:path knora-api:relatesTo ;
  sh:node api-shapes:LinkValue_ClassShape, api-shapes:relatesTo_NodeShape .

api-shapes:relatesTo_NodeShape
  a           sh:NodeShape ;
  sh:name     "This ensures that the target of the property is of type Resource, i.e. exists in the graph." ;
  sh:property [
                a          sh:PropertyShape ;
                sh:class   knora-api:Resource ;
                sh:message "Range is knora-api:Resource or a subclass." ;
                sh:path    api-shapes:linkValueHasTargetID ;
              ] ;
  sh:severity sh:Violation .


### knora-api:isVideoSegmentOf

api-shapes:isVideoSegmentOf_PropertyShape
  a       sh:PropertyShape ;
  sh:path knora-api:isVideoSegmentOf ;
  sh:node api-shapes:LinkValue_ClassShape, api-shapes:isVideoSegmentOf_NodeShape .

api-shapes:isVideoSegmentOf_NodeShape
  a           sh:NodeShape ;
  sh:name     "This ensures that the target of the property is of type MovingImageRepresentation, i.e. exists in the graph." ;
  sh:property [
                a          sh:PropertyShape ;
                sh:class   knora-api:MovingImageRepresentation ;
                sh:message "http://api.knora.org/ontology/knora-api/v2#MovingImageRepresentation" ;
                sh:path    api-shapes:linkValueHasTargetID ;
              ] ;
  sh:severity sh:Violation .


### knora-api:isAudioSegmentOf

api-shapes:isAudioSegmentOf_PropertyShape
  a       sh:PropertyShape ;
  sh:path knora-api:isAudioSegmentOf ;
  sh:node api-shapes:LinkValue_ClassShape, api-shapes:isAudioSegmentOf_NodeShape .

api-shapes:isAudioSegmentOf_NodeShape
  a           sh:NodeShape ;
  sh:name     "This ensures that the target of the property is of type AudioRepresentation, i.e. exists in the graph." ;
  sh:property [
                a          sh:PropertyShape ;
                sh:class   knora-api:AudioRepresentation ;
                sh:message "http://api.knora.org/ontology/knora-api/v2#AudioRepresentation" ;
                sh:path    api-shapes:linkValueHasTargetID ;
              ] ;
  sh:severity sh:Violation .


### knora-api:hasDescription

api-shapes:hasDescription_PropertyShape
  a       sh:PropertyShape ;
  sh:node api-shapes:FormattedTextValue_ClassShape ;
  sh:path knora-api:hasDescription .


### knora-api:hasTitle

api-shapes:hasTitle_PropertyShape
  a       sh:PropertyShape ;
  sh:node api-shapes:SimpleTextValue_ClassShape ;
  sh:path knora-api:hasTitle .


### knora-api:hasKeyword

api-shapes:hasKeyword_PropertyShape
  a       sh:PropertyShape ;
  sh:node api-shapes:SimpleTextValue_ClassShape ;
  sh:path knora-api:hasKeyword .


### knora-api:hasStandoffLinkTo

# Currently StandOff are attached directly to the resource and not in a LinkValue,
# therefore we do not validate it like a normal link with a LinkValue
api-shapes:hasStandoffLinkTo_TargetMustExistPropertyShape
  a sh:PropertyShape ;
  sh:path knora-api:hasStandoffLinkTo ;
  sh:class knora-api:Resource ;
  sh:message "A stand-off link must target an existing resource." ;
  sh:severity sh:Violation .


#########################################
# DSP BUILT IN RESOURCES
#########################################

# The built-in resources are are validated strictly by the xsd,
# therefore a mismatch of value type does not need to be evaluated the way user defined properties need to be

###########################
# LinkObj

api-shapes:LinkObj_ResourceShape
  a              sh:NodeShape ;
  sh:name        "Validates the LinkObj resource" ;
  sh:targetClass knora-api:LinkObj ;
  sh:property    api-shapes:hasLinkTo_PropertyShape ,
                 api-shapes:rdfsLabel_Shape,
                 api-shapes:hasComment_PropertyShape ,
                 api-shapes:hasStandoffLinkTo_TargetMustExistPropertyShape ;
  sh:severity    sh:Violation .


###########################
# Region

api-shapes:Region_ResourceShape
  a              sh:NodeShape ;
  sh:name        "Validates the Region resource" ;
  sh:targetClass knora-api:Region ;
  sh:property    api-shapes:rdfsLabel_Shape ,
                 api-shapes:isRegionOf_PropertyShape ,
                 api-shapes:hasColor_PropertyShape ,
                 api-shapes:hasGeometry_PropertyShape ,
                 api-shapes:hasComment_PropertyShape ,
                 api-shapes:hasStandoffLinkTo_TargetMustExistPropertyShape ;
  sh:severity    sh:Violation .


###########################
# AudioSegment

api-shapes:AudioSegment_ResourceShape
  a              sh:NodeShape ;
  sh:name        "Validates the AudioSegment resource" ;
  sh:targetClass knora-api:AudioSegment ;
  sh:property    api-shapes:rdfsLabel_Shape ,
                 api-shapes:hasComment_PropertyShape ,
                 api-shapes:hasSegmentBounds_PropertyShape ,
                 api-shapes:relatesTo_PropertyShape ,
                 api-shapes:isAudioSegmentOf_PropertyShape ,
                 api-shapes:hasDescription_PropertyShape ,
                 api-shapes:hasTitle_PropertyShape ,
                 api-shapes:hasKeyword_PropertyShape ,
                 api-shapes:hasStandoffLinkTo_TargetMustExistPropertyShape ;
  sh:severity    sh:Violation .


###########################
# VideoSegment

api-shapes:VideoSegment_ResourceShape
  a              sh:NodeShape ;
  sh:name        "Validates the VideoSegment resource" ;
  sh:targetClass knora-api:VideoSegment ;
  sh:property    api-shapes:rdfsLabel_Shape ,
                 api-shapes:hasComment_PropertyShape ,
                 api-shapes:hasSegmentBounds_PropertyShape ,
                 api-shapes:relatesTo_PropertyShape ,
                 api-shapes:isVideoSegmentOf_PropertyShape ,
                 api-shapes:hasDescription_PropertyShape ,
                 api-shapes:hasTitle_PropertyShape ,
                 api-shapes:hasKeyword_PropertyShape ,
                 api-shapes:hasStandoffLinkTo_TargetMustExistPropertyShape ;
  sh:severity    sh:Violation .
