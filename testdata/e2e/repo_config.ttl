# copied and adapted from dsp-api/webapi/scripts/fuseki-repository-config.ttl.template

@prefix :           <http://base/#> .
@prefix fuseki:     <http://jena.apache.org/fuseki#> .
@prefix ja:         <http://jena.hpl.hp.com/2005/11/Assembler#> .
@prefix tdb2:       <http://jena.apache.org/2016/tdb#> .
@prefix rdf:        <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:       <http://www.w3.org/2000/01/rdf-schema#> .
@prefix text:       <http://jena.apache.org/text#> .
@prefix knora-base: <http://www.knora.org/ontology/knora-base#> .

[] rdf:type        fuseki:Server ;
   fuseki:services :service_tdb_all ;
   ja:loadClass    "org.apache.jena.query.text.TextQuery" .

:service_tdb_all a fuseki:Service ;
                 rdfs:label                        "TDB2 knora-test" ;
                 fuseki:dataset                    :text_dataset ;
                 fuseki:name                       "knora-test" ;
                 fuseki:serviceQuery               "query" , "sparql" ;
                 fuseki:serviceReadGraphStore      "get" ;
                 fuseki:serviceReadWriteGraphStore "data" ;
                 fuseki:serviceUpdate              "update" ;
                 fuseki:serviceUpload              "upload" .

:text_dataset rdf:type     text:TextDataset ;
            text:dataset :tdb_dataset_readwrite ;
            text:index   :indexLucene .

:tdb_dataset_readwrite  a                                   tdb2:DatasetTDB2 ;
                        tdb2:unionDefaultGraph              true ;
                        tdb2:location                       "/fuseki/databases/knora-test" .

:indexLucene a text:TextIndexLucene ;
            text:directory "/fuseki/lucene/knora-test" ;
            text:entityMap :entMap ;
            text:analyzer  [ a text:ConfigurableAnalyzer ;
                              text:tokenizer text:WhitespaceTokenizer ;
                              text:filters ( text:ASCIIFoldingFilter text:LowerCaseFilter)
                           ] .

:entMap a                 text:EntityMap ;
        text:entityField  "uri" ;
        text:defaultField "text" ;
        text:uidField     "uid" ;
        text:map          (
                              [ text:field  "text" ;  text:predicate  rdfs:label ]
                              [ text:field  "text" ;  text:predicate  knora-base:valueHasString ]
                              [ text:field  "text" ;  text:predicate  knora-base:valueHasComment ]
                          ) .
