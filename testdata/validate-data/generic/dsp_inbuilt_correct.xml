<?xml version='1.0' encoding='utf-8'?>

<knora xmlns="https://dasch.swiss/schema"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="https://dasch.swiss/schema ../../../src/dsp_tools/resources/schema/data.xsd"
       shortcode="9999"
       default-ontology="in-built">


    <permissions id="open">
        <allow group="UnknownUser">V</allow>
        <allow group="KnownUser">V</allow>
        <allow group="ProjectMember">D</allow>
        <allow group="ProjectAdmin">CR</allow>
    </permissions>

    <!-- Target Resources for Links -->

    <resource label="Empty 1" restype=":TestNormalResource" id="target_empty_1"/>
    <resource label="Empty 2" restype=":TestNormalResource" id="target_empty_2"/>

    <resource label="Target Image" restype=":TestStillImageRepresentationWithSeqnum" id="target_empty_image">
        <bitstream>this/is/filepath/file.jpg</bitstream>
    </resource>

    <resource label="Target Movie" restype="onto:TestMovingImageRepresentation" id="target_empty_movie">
        <bitstream>this/is/filepath/file.mp4</bitstream>
    </resource>


    <!-- LinkObj -->

    <link label="Link object" id="link_obj_no_comment">
        <resptr-prop name="hasLinkTo">
            <resptr>target_empty_1</resptr>
            <resptr>target_empty_2</resptr>
        </resptr-prop>
    </link>

    <link label="Link object" id="link_obj_with_comment">
        <text-prop name="hasComment">
            <text encoding="xml">Comment Text</text>
        </text-prop>
        <resptr-prop name="hasLinkTo">
            <resptr>target_empty_1</resptr>
            <resptr>target_empty_2</resptr>
        </resptr-prop>
    </link>


    <!-- Region -->

    <region label="Region" id="region_with_comment">
        <color-prop name="hasColor">
            <color>#5d1f1e</color>
        </color-prop>
        <resptr-prop name="isRegionOf">
            <resptr>target_empty_image</resptr>
        </resptr-prop>
        <geometry-prop name="hasGeometry">
            <geometry>
                {
                    "status": "active",
                    "type": "polygon",
                    "lineWidth": 5,
                    "points": [{"x": 0.4, "y": 0.6},
                    {"x": 0.5, "y": 0.9},
                    {"x": 0.8, "y": 0.9},
                    {"x": 0.7, "y": 0.6}]
                }
            </geometry>
        </geometry-prop>
        <text-prop name="hasComment">
            <text encoding="xml">Comment Text</text>
        </text-prop>
    </region>

    <!-- Region without comment -->

    <region label="Region" id="region_without_comment">
        <color-prop name="hasColor">
            <color>#5d1f1e</color>
        </color-prop>
        <resptr-prop name="isRegionOf">
            <resptr>target_empty_image</resptr>
        </resptr-prop>
        <geometry-prop name="hasGeometry">
            <geometry>
                {
                    "status": "active",
                    "type": "polygon",
                    "lineWidth": 5,
                    "points": [{"x": 0.4, "y": 0.6},
                    {"x": 0.5, "y": 0.9},
                    {"x": 0.8, "y": 0.9},
                    {"x": 0.7, "y": 0.6}]
                }
            </geometry>
        </geometry-prop>
    </region>


    <!-- hasRepresentation to any Representation type -->

    <resource label="Target is any representation image" restype=":TestNormalResource"
              id="has_any_representation_image">
        <resptr-prop name=":testHasRepresentation">
            <resptr>target_empty_image</resptr>
        </resptr-prop>
    </resource>

    <resource label="Target is any representation movie" restype=":TestNormalResource"
              id="has_any_representation_movie">
        <resptr-prop name=":testHasRepresentation">
            <resptr>target_empty_movie</resptr>
        </resptr-prop>
    </resource>


    <!-- hasRepresentation to only images -->

    <resource label="Target is image representation" restype=":TestNormalResource" id="has_image_representation">
        <resptr-prop name=":testHasRepresentationImage">
            <resptr>target_empty_image</resptr>
        </resptr-prop>
    </resource>


    <!-- direct usage of knora-api seqnum/isPartOf -->

    <resource label="Image with sequence" restype=":TestStillImageRepresentationWithSeqnum"
              id="seqnum_isPartOf_direct_usage">
        <bitstream>this/is/filepath/file.jpg</bitstream>
        <resptr-prop name="isPartOf">
            <resptr>target_empty_1</resptr>
        </resptr-prop>
        <integer-prop name="seqnum">
            <integer>1</integer>
        </integer-prop>
    </resource>


    <!-- sub-property usage of knora-api seqnum/isPartOf -->

    <resource label="Image with sequence" restype=":TestStillImageRepresentationWithInheritedSeqnum"
              id="seqnum_isPartOf_sub_prop_usage">
        <bitstream>this/is/filepath/file.jpg</bitstream>
        <resptr-prop name=":testIsPartOf">
            <resptr>target_empty_1</resptr>
        </resptr-prop>
        <integer-prop name=":testSeqnum">
            <integer>1</integer>
        </integer-prop>
    </resource>

    <!-- permissions -->

    <resource label="Resource with Permissions"
              restype=":TestNormalResource"
              id="resource_permissions"
              permissions="open"
    />

    <link label="value with permissions" id="value_with_permissions">
        <resptr-prop name="hasLinkTo">
            <resptr permissions="open">target_empty_1</resptr>
        </resptr-prop>
    </link>

    <resource label="bitstream with permissions"
              restype=":TestStillImageRepresentationWithSeqnum"
              id="bitstream_permissions"
    >
        <bitstream permissions="open">this/is/filepath/file.jpg</bitstream>
    </resource>

    <resource label="IIIF with permissions" restype=":TestStillImageRepresentationWithSeqnum" id="iiif_permissions">
        <iiif-uri permissions="open">
            https://iiif.wellcomecollection.org/1Oi7mdiLsG7-FmFgp0xz2xU.jp2/full/max/0/default.jpg
        </iiif-uri>
    </resource>

</knora>