<?xml version='1.0' encoding='utf-8'?>

<knora xmlns="https://dasch.swiss/schema"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="https://dasch.swiss/schema https://raw.githubusercontent.com/dasch-swiss/dsp-tools/main/src/dsp_tools/resources/schema/data.xsd"
       shortcode="9999"
       default-ontology="onto">

    <!--
        This file contains data that is more complex, especially with regard to inheritance.
        For this to succeed, some additional logic may have to be applied to the ontology received from the API.
     -->


    <!--
        This cardinality restriction is inherited from the superclass.
        The example is correct and should not appear on the error report.
    -->
    <resource label="Inherited good cardinality" restype=":SubClass" id="inherited-cardinality-correct">
        <text-prop name=":hasSimpleText">
            <text encoding="utf8">Text Value One</text>
        </text-prop>
    </resource>

    <!--
        This is correct and should not appear in the validation errors,
        because the ObjectClassConstraint is the superclass of :SubClass
    -->

    <resource label="Target Link Class Correct" restype=":NormalClass" id="link-value-correct">
        <resptr-prop name=":linkProp">
            <resptr>inherited-cardinality-correct</resptr>
        </resptr-prop>
    </resource>


    <!--
        The same Subject Predicate Object triple may not exist for the same resource.
        But it must be able to exist across different resources.
    -->

    <resource label="Value is Identical" restype=":NormalClass" id="identical-value-1">
        <text-prop name=":hasSimpleText">
            <text encoding="utf8">These two values are identical.</text>
        </text-prop>
    </resource>

    <resource label="Value is Identical to the others" restype=":NormalClass" id="identical-value-2">
        <text-prop name=":hasSimpleText">
            <text encoding="utf8">These two values are identical.</text>
        </text-prop>
    </resource>


    <!-- It is allowed to have two list nodes within one list. -->
    <resource label="Duplicate list with different nodes are allowed" restype=":NormalClass" id="duplicate-list-different-node">
        <list-prop name=":listProp" list="onlyList">
            <list>n1</list>
            <list>n1.1</list>
        </list-prop>
    </resource>

</knora>