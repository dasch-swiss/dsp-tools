@prefix rdf:        <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:        <http://www.w3.org/2002/07/owl#> .
@prefix rdfs:       <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:        <http://www.w3.org/2001/XMLSchema#> .
@prefix sh:         <http://www.w3.org/ns/shacl#> .
@prefix knora-api:  <http://api.knora.org/ontology/knora-api/v2#> .
@prefix salsah-gui: <http://api.knora.org/ontology/salsah-gui/v2#> .

@prefix api-shapes: <http://api.knora.org/ontology/knora-api/shapes/v2#> .


#########################
# USER FACING VALUES
#########################

##############
# BooleanValue
##############

# knora-api:BooleanValue -> knora-api:booleanValueAsBoolean
api-shapes:BooleanValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'BooleanValue'." ;
  sh:class    knora-api:BooleanValue ;
  sh:severity sh:Violation .


##############
# ColorValue
##############

# knora-api:ColorValue -> knora-api:colorValueAsColor
api-shapes:ColorValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'ColorValue'." ;
  sh:class    knora-api:ColorValue ;
  sh:severity sh:Violation .


##############
# DateValue
##############

# knora-api:DateValue -> complicated
# (should we do the regex?)
api-shapes:DateValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'DateValue'." ;
  sh:class    knora-api:DateValue ;
  sh:severity sh:Violation .


##############
# DecimalValue
##############

# knora-api:DecimalValue -> knora-api:decimalValueAsDecimal
api-shapes:DecimalValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'DecimalValue'." ;
  sh:class    knora-api:DecimalValue ;
  sh:severity sh:Violation .


##############
# GeomValue
##############

# knora-api:GeomValue -> knora-api:geometryValueAsGeometry
api-shapes:GeomValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'GeomValue'." ;
  sh:class    knora-api:GeomValue ;
  sh:severity sh:Violation .


##############
# GeonameValue
##############

# knora-api:GeonameValue -> knora-api:geonameValueAsGeonameCode
api-shapes:GeonameValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'GeonameValue'." ;
  sh:class    knora-api:GeonameValue ;
  sh:severity sh:Violation .


##############
# IntValue
##############

# knora-api:IntValue -> knora-api:intValueAsInt
api-shapes:IntValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'IntValue'." ;
  sh:class    knora-api:IntValue ;
  sh:severity sh:Violation .


##############
# LinkValue
##############

# knora-api:LinkValue -> knora-api:linkValueHasTargetIri
api-shapes:LinkValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'LinkValue'." ;
  sh:class    knora-api:LinkValue ;
  sh:severity sh:Violation .


##############
# ListValue
##############

# knora-api:ListValue -> knora-api:listValueAsListNode
# -> if we do not check the list name itself we cannot say if the problem is whether the node does not exist or the list itself
api-shapes:ListValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'ListValue'." ;
  sh:class    knora-api:ListValue ;
  sh:severity sh:Violation .


##############
# TextValue
##############

# knora-api:TextValue -> knora-api:valueAsString
api-shapes:SimpleTextValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'TextValue' without formatting." ;
  sh:severity sh:Violation .


api-shapes:SimpleTextValue_NodeShape
  a           sh:NodeShape ;
  sh:name     "Validates content of string." ;
  sh:property [
                a            sh:PropertyShape ;
                sh:path      knora-api:valueAsString ;
                sh:minLength 1 ;
                sh:message   "Value must be a valid non-empty string." ;
              ] ;
  sh:severity sh:Violation .


# knora-api:TextValue -> knora-api:textValueAsXml
api-shapes:FormattedTextValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'TextValue' with formatting." ;
  sh:severity sh:Violation .


api-shapes:FormattedTextValue_NodeShape
  a           sh:NodeShape ;
  sh:name     "Validates content of string." ;
  sh:property [
                a            sh:PropertyShape ;
                sh:path      knora-api:textValueAsXml ;
                sh:minLength 1 ;
                sh:message   "Value must be a valid non-empty string." ;
              ] ;
  sh:severity sh:Violation .


##############
# TimeValue
##############

# knora-api:TimeValue -> knora-api:timeValueAsTimeStamp
api-shapes:TimeValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'TimeValue'." ;
  sh:class    knora-api:TimeValue ;
  sh:severity sh:Violation .


##############
# UriValue
##############

# knora-api:UriValue -> knora-api:uriValueAsUri
api-shapes:UriValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type 'UriValue'." ;
  sh:class    knora-api:UriValue ;
  sh:severity sh:Violation .


#########################
# RESOURCES WITH FILES
# -> we need to change the parsing check extension and then assign proper class
#########################


# ArchiveRepresentation: A resource representing an archive file (e.g. ZIP)
# knora-api:ArchiveFileValue -> knora-api:hasArchiveFileValue


# AudioRepresentation: A resource representing an audio file
# knora-api:AudioFileValue -> knora-api:hasAudioFileValue


# DocumentRepresentation: A resource representing an opaque document (e.g. a PDF)
# knora-api:DocumentFileValue -> knora-api:hasDocumentFileValue


# MovingImageRepresentation: A resource representing a video
# knora-api:MovingImageFileValue -> knora-api:hasMovingImageFileValue


# StillImageRepresentation: A resource representing an image
# knora-api:StillImageExternalFileValue -> knora-api:fileValueHasExternalUrl
# knora-api:StillImageFileValue -> knora-api:hasStillImageFileValue


# TextRepresentation: A resource representing a text
# knora-api:TextFileValue -> knora-api:hasTextFileValue


#########################
# DSP BUILT IN RESOURCES FOR DIRECT USAGE
#########################


# knora-api:Annotation


# knora-api:Region


# knora-api:LinkObj


# knora-api:VideoSegment


# knora-api:AudioSegment

