@prefix rdf:        <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:        <http://www.w3.org/2002/07/owl#> .
@prefix rdfs:       <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:        <http://www.w3.org/2001/XMLSchema#> .
@prefix sh:         <http://www.w3.org/ns/shacl#> .

@prefix val-onto:   <http://api.knora.org/validation-onto#> .
@prefix val-shapes: <http://api.knora.org/validation-shapes#> .

########################################
# IntValue Shape
########################################

val-shapes:IntValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type IntValue." ;
  sh:class    val-onto:IntValue ;
  sh:severity sh:Violation .

val-shapes:IntValue_NodeShape
  a           sh:NodeShape ;
  sh:name     "Validates that it is a valid integer in string form." ;
  sh:property [
                a          sh:PropertyShape ;
                sh:path    val-onto:hasIntValue ;
                sh:pattern "^\\d+$" ;
                sh:message "Value must be a valid integer." ;
              ] ;
  sh:severity sh:Violation .


########################################
# SimpleText Shape
########################################


val-shapes:SimpleText_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type SimpleText." ;
  sh:class    val-onto:SimpleText ;
  sh:severity sh:Violation .

val-shapes:SimpleText_NodeShape
  a           sh:NodeShape ;
  sh:name     "Validates content of string." ;
  sh:property [
                a            sh:PropertyShape ;
                sh:path      val-onto:hasSimpleTextValue ;
                sh:minLength 1 ;
                sh:datatype  xsd:string ;
                sh:message   "Value must be a valid non-empty string." ;
              ] ;
  sh:severity sh:Violation .


val-shapes:SimpleText_UniqueValuesShape
  a           sh:NodeShape ;
  sh:sparql   [
                a          sh:SPARQLConstraint ;
                sh:message "A subject must not have identical SimpleText values." ;
                sh:select  """
                    PREFIX val-onto: <http://api.knora.org/validation-onto#>
                    SELECT $this ?value WHERE {
                      $this ?someProperty ?textValue .

                      ?textValue a val-onto:SimpleText ;
                                   val-onto:hasSimpleTextValue ?value .
                    }
                    GROUP BY $this ?value
                    HAVING (COUNT(?textValue) > 1)
                """ ;
              ] ;
  sh:severity sh:Violation .


########################################
# THE FOLLOWING MUST BE AT LEAST PARTIALLY CONSTRUCTED IN CODE
# BECAUSE THE PROJECT ONTOLOGY IS RELEVANT
########################################


########################################
# ListValue Shape
########################################

# The property shapes are individual to each ontology.

val-shapes:ListValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type ListValue." ;
  sh:class    val-onto:ListValue ;
  sh:severity sh:Violation .


########################################
# LinkValue Shape
########################################

# The property shapes are individual to each ontology.

val-shapes:LinkValue_ClassShape
  a           sh:NodeShape ;
  sh:name     "Validates the class type" ;
  sh:message  "Object must be a of type LinkValue." ;
  sh:class    val-onto:LinkValue ;
  sh:severity sh:Violation .