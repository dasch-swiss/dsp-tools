@prefix rdf:        <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:        <http://www.w3.org/2002/07/owl#> .
@prefix rdfs:       <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:        <http://www.w3.org/2001/XMLSchema#> .
@prefix sh:         <http://www.w3.org/ns/shacl#> .

@prefix val-onto: <http://api.knora.org/validation-onto#> .
@prefix val-shapes: <http://api.knora.org/validation-shapes#> .

########################################
# IntValue Shape
########################################

val-onto:IntValue a owl:Class .

val-shapes:IntValue_Shape
  a              sh:NodeShape ;
  sh:name        "Object of IntValue" ;
  sh:message     "must be a valid integer" ;
  sh:targetClass val-onto:IntValue ;
  sh:property    val-shapes:hasIntValue_Shape ;
  sh:severity    sh:Violation .


val-onto:hasIntValue a owl:DatatypeProperty .

val-shapes:hasIntValue_Shape
  a           sh:PropertyShape ;
  sh:name     "Value of hasIntValue" ;
  sh:message  "must be a valid integer" ;
  sh:path     val-onto:hasIntValue ;
  sh:pattern  "^\\d+$" ;
  sh:severity sh:Violation .


########################################
# SimpleText Shape
########################################


val-onto:SimpleText a owl:Class .

val-shapes:SimpleText_Shape
  a              sh:NodeShape ;
  sh:name        "Object of SimpleText" ;
  sh:message     "must be a valid string" ;
  sh:targetClass val-onto:SimpleText ;
  sh:property    val-shapes:hasSimpleTextValue_Shape ;
  sh:severity    sh:Violation .


val-onto:hasSimpleTextValue a owl:DatatypeProperty .

val-shapes:hasSimpleTextValue_Shape
  a            sh:PropertyShape ;
  sh:name      "Value of hasSimpleTextValue" ;
  sh:message   "must be a valid non-empty string." ;
  sh:path      val-onto:hasSimpleTextValue ;
  sh:minLength 1 ;
  sh:datatype  xsd:string ;
  sh:severity  sh:Violation .


########################################
# THE FOLLOWING MUST BE AT LEAST PARTIALLY CONSTRUCTED IN CODE
# BECAUSE THE PROJECT ONTOLOGY IS RELEVANT
########################################


########################################
# ListValue Shape
########################################

# Each list must have its own node and property shapes

val-onto:ListValue a owl:Class .


val-onto:hasListValue a owl:ObjectProperty .

val-onto:hasListName a owl:DatatypeProperty .

########################################
# LinkValue
########################################

# For each link property we need to define its own LinkValue Shape and target iri PropertyShape
val-onto:LinkValue a owl:Class .

val-onto:hasLinkValue a owl:ObjectProperty .

